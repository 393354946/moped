
api
autosar
ecm-core
ecm-linux
plugins
server
simulator
squawk
test
tools
webportal
WirelessIno

squawk is ...
autosar is ...
webportal is a modification of https://wordpress.org/download/
WirelessIno is a modification of https://github.com/MiichaelD/BluIno


Nothing to do in webportal
If we want to run it, we may want to at least change the address to the
trusted server in custom/globalVariables.php




cd autosar
Change build.sh appropriately to use the cross compiler
export CROSS_COMPILE=/home/arndt/moped/arm/Sourcery_CodeBench_Lite_for_ARM_EABI/bin/arm-none-eabi-

export BDIR=../examples/Raspberry_Pi/demo_VCU
#export BDIR=../examples/Raspberry_Pi/demo_SCU
autosar/src/core/arch/arm/arm_v6/drivers/bcm2835.h
#define VCU 1
#define SCU 0

./build.sh clean; ./build.sh


autosar/src/core/binaries/Raspberry_Pi/kernel.img
ecm-linux/target/ecm-linux-0.0.1-SNAPSHOT.jar



see moped-mysql.txt










With a saved mysql dump already containing apps, we first make sure the
app paths refer to something: copy the moped_plugins directory, and
create links to make /lhome/sse/moped_plugins work (but changing the database
is probably better)

and then in python, we can do
client.service.install("20UYA31581L000000", 25, "jdk")

Now the server said this:
    Found plugin with name: AutoBrake
    READY FOR INSTALLATION WRITING!!!!!!!!!!!!!!!!!!!!
    SUCCESSFULLY INSTALLED SOME STUFF!!!!!!!!!!!!!!!!!!!!
    Found plugin with name: UltraSonicReader
    Message sent from server...
    READY FOR INSTALLATION WRITING!!!!!!!!!!!!!!!!!!!!
    Message sent from server...
    SUCCESSFULLY INSTALLED SOME STUFF!!!!!!!!!!!!!!!!!!!!
    Message received on server...
    [VIN = 20UYA31581L000000]AutoBrake.zip arrived in the Linux
    Message received on server...
    [VIN = 20UYA31581L000000]AutoBrake.zip arrived in the Linux
    Message received on server...
    [VIN = 20UYA31581L000000]UltraSonicReader.zip arrived in the Linux

The simulator prints the bytes (in decimal) of the whole app and then may
give an error due to the app having been compiled for the actual car and
not the simulator.

One case that works better:
    client.service.insertPluginInDb("/home/arndt/moped/moped_plugins/PluginCreationTest/1.0/", "PluginCreationTest")
Server says
    WARNING: NO RESULTS WERE FOUND FOR QUERY: "FROM DatabasePlugin d WHERE d.fullClassName = 'plugins/PluginCreationTest' AND d.location = '/home/arndt/moped/moped_plugins/PluginCreationTest/1.0/PluginCreationTest' AND d.name = 'PluginCreationTest' AND d.zipLocation = '/home/arndt/moped/moped_plugins/PluginCreationTest/1.0' AND d.zipName = 'PluginCreationTest.zip' AND d.reference = 2 AND d.application = 32"
    configfile /tmp/tempxml.xml3320370971674522082.tmp
The "warning" means it wasn't there yet.

From the above, the app id is 32,
    client.service.install("20UYA31581L000000", 32, "jdk")
This seemed to work.

We can also see it from looking at this mysql table:
select * from Application;


Modify an existing app slightly, copy it to the proper place in the
file system and install it and see that it runs. Add this line to
PluginCreationTest.java, as the last line in init():
		System.out.println("Hooray!");

cd plugins
cd PluginCreationTest
mvn clean install
 (I needed to remove a dependency from ../pom.xml)
cp target/PluginCreationTest-1.0.jar /lhome/sse/moped_plugins/PluginCreationTest/1.0/PluginCreationTest.zip
cp target/PluginCreationTest-1.0.jar /lhome/sse/moped_plugins/PluginCreationTest/1.0/PluginCreationTest.jar

In the python shell, 
>>> client.service.insertPluginInDb("/lhome/sse/moped_plugins/PluginCreationTest/1.0/", "PluginCreationTest")

and then

client.service.install("20UYA31581L000000", 32, "jdk")

A lot of numbers are shown in the simulator, along with some error backtrace,
but in the middle of it, we see the Hooray.

Modify Hooray to Howdy, and do the above again. I think the app does not
run this time, only gets installed, but kill the simulator and start it again.
Now it says Howdy.


Modify the simulator to have some motor speed, and see that the car
moves.
Add the following lines to the constructor in simulator/src/main/java/gui/CarModel.java:
		steeringAngle = 50.0;
		motorPower = 0.001;

Build and restart the simulator. The car now goes in narrow lefthand circles.


Next: define the steering port for an app, let the code set the
steering angle to 50% to the right, and install it, and see that the
car now turns right instead. (The two numbers 50 don't seem to mean
the same thing.)
New app
PluginCreationTest2
We then need to add it to the database:
insert into VehiclePlugin (appId,vin) values (38,"20JAX31581L000000");

