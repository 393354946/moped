package se.sics.sse.fresta.wirelessino;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Point;
import android.util.Log;
import android.view.Display;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;
import android.widget.Toast;

public class Main extends Activity /* implements Runnable */implements
		OnSeekBarChangeListener {
	public static final String TAG = "WirelessIno";
//	private Paint pRed, pBlue;
	private BufferedReader in = null;
	private static PrintWriter out = null;
	private String content = "";
	public static Socket socket = null;
	public static boolean isConnected = false;
	public static final boolean D = true;

	private SeekBar bar; // declare seekbar object variable

	// declare text label objects
	// private TextView textProgress, textAction;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
//		setContentView(R.layout.main);

//		pRed = new Paint();
//		pRed.setColor(Color.RED);
//		pRed.setAntiAlias(true);
//		pBlue = new Paint();
//		pBlue.setColor(Color.BLUE);
//		pBlue.setAntiAlias(true);
		// new Thread(new ClientThread()).start();

//		bar = (SeekBar) findViewById(R.id.seekBar2); // make seekbar object
//		bar.setOnSeekBarChangeListener(this); // set seekbar listener.
//		// since we are using this class as the listener the class is "this"

		// make text label for progress value
		// textProgress = (TextView) findViewById(R.id.textViewProgress);
		// make text label for action
		// textAction = (TextView) findViewById(R.id.textViewAction);
		
		setContentView(new PadView(this));
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		// getMenuInflater().inflate(R.menu.main, menu);
		// return true;
		menu.add(0, 1, 1, R.string.exit);
		menu.add(0, 2, 2, "Wireless Configuration");
		// return super.onCreateOptionsMenu(menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
		if (item.getItemId() == 1) {
			finish();
		} else if (item.getItemId() == 2) {
			// Toast toast=Toast.makeText(this, "This is a menu exercise",
			// Toast.LENGTH_SHORT);
			// toast.show();
			Intent i = new Intent(Main.this, SocketConnecter.class);
			startActivity(i);
		}
		return super.onOptionsItemSelected(item);
	}

	public static void init(Socket socket) {
		Main.socket = socket;
		try {
			out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(
					socket.getOutputStream())), true);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static void send(Object message) {
		out.println(message);
	}

	@Override
	public void onProgressChanged(SeekBar seekBar, int progress,
			boolean fromUser) {
		// TODO Auto-generated method stub

		// change progress text label with current seekbar value
		// textProgress.setText("The value is: " + progress);
		send("Wheel: " + progress);
		// change action text label to changing
		// textAction.setText("changing");
	}

	@Override
	public void onStartTrackingTouch(SeekBar seekBar) {
		// TODO Auto-generated method stub
		// textAction.setText("starting to track touch");

	}

	@Override
	public void onStopTrackingTouch(SeekBar seekBar) {
		// TODO Auto-generated method stub
		seekBar.setSecondaryProgress(seekBar.getProgress()); // set the shade of
																// the previous
																// value.
																// textAction.setText("ended tracking touch");
	}

	
}
